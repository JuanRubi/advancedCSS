/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* * is a universal selector applies changes to all selectors */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;

    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8),
     rgba(40, 180, 133, 0.8)) , url(../images/hero.jpg);
    background-size: cover;
    background-position: top;  /* Ensures top of image stays at the top. */
    position: relative; 
    
    /* Creating the shape of the background images. */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* From top left clockwise. */
}

.logo-container {
    position: absolute;
    top: 40px;  /* In relation to its parent element. */
    left: 40px;
}

.logo {
    height: 45px;
}

.main-title {
    position: absolute;
    top: 50%;   /* In relation to its parent element. */
    left: 50%;
    transform: translate(-50%, -50%); /* (width, height) to translate of element. */
    text-align: center;
}

.heading {
    color: #fff;
    text-transform: uppercase;

    margin-bottom: 50px;
}

.heading-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1.5s;
    animation-timing-function: ease-out;

    /* Other animation properties: 
    animation-delay: 2s;
    animation-iteration-count: 2;
    animation-timing-function: ease-in; multiple functions available for this property
    */
}

.heading-submain {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.3px;

    animation: moveInRight 1.5s ease-out;
}

/* Creating main title animations. */
/* NOTE: Browsers are optimize for opacity and transform property changes. */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* pseudo class - special state of selector (link in this case) */
.button:link,
.button:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 10px 30px;
    display: inline-block;
    border-radius: 50px;

    transition: all 0.2s;  /* transition property has to be on the initial state. */
    position: relative;
}

.button:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.button:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.button-heading {
    background-color: #fff;
    color: #777;
}

.button::after {
    /* Need to set content and display for it to work. Even if content is empty. */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 50px;

    /* Setting it behind the button. */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    transition: all 0.4s;
}

.button-heading::after {
    background-color: #fff;
}

.button:hover::after {
    transform: scaleX(1.3) scaleY(1.4);
    opacity: 0;
}

.button-animation {
    animation: moveInBottom 1s ease-out 0.5s;
    
    /* Apply 0% animation styles before animation starts. */
    animation-fill-mode: backwards;
}